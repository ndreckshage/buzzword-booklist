type CardComponent {
  id: ID!
  href: String!
  image: String!
  title: String!
  createdBy: String
}

type CarouselComponent {
  id: ID!
  title: String!
  link: LinkComponent
  cards: [CardComponent!]!
  sourceType: ListSourceType!
  sourceKey: String!
  createdBy: String
  pageSize: Int!
}

type GridComponent {
  id: ID!
  title: String!
  cards: [CardComponent!]!
  sourceType: ListSourceType!
  sourceKey: String!
  createdBy: String
  pageSize: Int!
}

type BookImageComponent {
  id: ID!
  image: String!
}

type BookTitleComponent {
  id: ID!
  title: String!
}

type BookActionComponent {
  id: ID!
  link: LinkComponent
}

type BookAuthorsComponent {
  id: ID!
  links: [LinkComponent!]!
}

type BookCategoriesComponent {
  id: ID!
  links: [LinkComponent!]!
}

type BookDetailsComponent {
  id: ID!
  text: String!
}

type ListComponent {
  id: ID!
  title: String!
  cards: [CardComponent!]!
  sourceType: ListSourceType!
  sourceKey: String!
  createdBy: String
  pageSize: Int!
}

type MarkdownComponent {
  id: ID!
  text: String!
  backgroundColor: String!
}

enum LinkComponentVariant {
  DEFAULT
  BUTTON
}

type LinkComponent {
  title: String!
  href: String!
  variant: LinkComponentVariant!
}

type LayoutComponent {
  id: ID!
  title: String!
  createdBy: String!
  flexDirection: String!
  container: Boolean!
  components: [Component!]!
}

union Component =
    LayoutComponent
  | BookImageComponent
  | BookTitleComponent
  | BookActionComponent
  | BookAuthorsComponent
  | BookCategoriesComponent
  | BookDetailsComponent
  | CardComponent
  | CarouselComponent
  | GridComponent
  | ListComponent
  | MarkdownComponent

type Book {
  id: ID!
  googleBooksVolumeId: String!
  title: String!
  image: String!
}

type List {
  id: ID!
  title: String!
  key: String!
  createdBy: String!
  books: [Book!]!
}

type CurrentUser {
  name: String!
  layoutComponents: [LayoutComponent!]!
  lists: [List!]!
}

enum LayoutContextType {
  CATEGORY
  AUTHOR
  LIST
  BOOK
  NONE
}

enum ListSourceType {
  RECENT_LISTS
  RECENT_LAYOUTS
  TOP_AUTHORS
  TOP_CATEGORIES
  TOP_BOOKS
  CATEGORY
  AUTHOR
  LIST
  NONE
}

type Query {
  currentUser: CurrentUser
  layout(
    id: ID!
    contextType: LayoutContextType!
    contextKey: String!
  ): LayoutComponent
  component(id: ID!): Component
  list(listKey: String!): List
}

type Mutation {
  # books / lists...
  createList(title: String!): Boolean
  addBookToList(listKey: String!, googleBooksVolumeId: String!): Boolean!
  removeBookFromList(listKey: String!, googleBooksVolumeId: String!): Boolean!
  # layouts...
  createLayoutComponent(title: String!): Boolean
  updateLayoutComponent(
    layoutId: ID!
    componentOrder: [ID!]
    flexDirection: String
    container: Boolean
  ): Boolean!
  createComponentInLayout(layoutId: ID!, componentType: String!): Boolean!
  removeComponentInLayout(layoutId: ID!, componentId: ID!): Boolean!
  updateMarkdownComponent(
    componentId: ID!
    text: String!
    backgroundColor: String!
  ): Boolean!
  updateListComponent(
    componentId: ID!
    sourceType: ListSourceType!
    sourceKey: String!
    pageSize: Int!
  ): Boolean!
}
