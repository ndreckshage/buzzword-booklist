type BookCardComponent {
  id: ID!
  href: String!
  image: String!
}

type BookCarouselComponent {
  id: ID!
  title: String!
  link: LinkComponent
  bookCards: [BookCardComponent!]!
  sourceType: ComponentContextType
  sourceKey: String
}

type BookGridComponent {
  id: ID!
  title: String!
  bookCards: [BookCardComponent!]!
  sourceType: ComponentContextType
  sourceKey: String
}

type BookImageComponent {
  id: ID!
  href: String!
}

type BookTitleComponent {
  id: ID!
  title: String!
}

type BookAuthorsComponent {
  id: ID!
  links: [LinkComponent!]!
}

type BookCategoriesComponent {
  id: ID!
  links: [LinkComponent!]!
}

type BookDetailsComponent {
  id: ID!
  text: String!
}

type BookListComponent {
  id: ID!
  title: String!
  bookCards: [BookCardComponent!]!
  sourceType: ComponentContextType
  sourceKey: String
}

type MarkdownComponent {
  id: ID!
  text: String!
}

enum LinkComponentVariant {
  DEFAULT
  BUTTON
}

type LinkComponent {
  title: String!
  href: String!
  variant: LinkComponentVariant!
}

type LayoutComponent {
  id: ID!
  title: String!
  createdBy: String!
  flexDirection: String!
  components: [Component!]!
}

union Component =
    LayoutComponent
  | BookCardComponent
  | BookCarouselComponent
  | BookGridComponent
  | BookListComponent
  | BookImageComponent
  | BookTitleComponent
  | BookAuthorsComponent
  | BookCategoriesComponent
  | BookDetailsComponent
  | MarkdownComponent

type Book {
  id: ID!
  googleBooksVolumeId: String!
  title: String!
  image: String!
}

type List {
  id: ID!
  title: String!
  key: String!
  createdBy: String!
  books: [Book!]!
}

type CurrentUser {
  name: String!
  layoutComponents: [LayoutComponent!]!
  lists: [List!]!
}

enum ComponentContextType {
  AUTHOR
  BOOK
  CATEGORY
  LIST
  NONE
}

type Query {
  currentUser: CurrentUser
  layout(
    id: ID!
    contextType: ComponentContextType!
    contextKey: String!
  ): LayoutComponent
  component(id: ID!): Component
  list(listKey: String!): List
}

type Mutation {
  # books / lists...
  createList(title: String!): Boolean
  addBookToList(listKey: String!, googleBooksVolumeId: String!): Boolean!
  removeBookFromList(listKey: String!, googleBooksVolumeId: String!): Boolean!
  # layouts...
  createLayoutComponent(title: String!): Boolean
  updateLayoutComponent(
    layoutId: ID!
    componentOrder: [ID!]
    flexDirection: String
  ): Boolean!
  createComponentInLayout(layoutId: ID!, componentType: String!): Boolean!
  removeComponentInLayout(layoutId: ID!, componentId: ID!): Boolean!
  updateMarkdownComponent(componentId: ID!, text: String!): Boolean!
  updateBooklistComponent(
    componentId: ID!
    sourceType: ComponentContextType!
    sourceKey: String!
  ): Boolean!
}
